/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package spassocasaerp;

import java.awt.Component;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.table.DefaultTableModel;
import spassocasaerp.Classes.MetodosGenericos;
import spassocasaerp.Classes.NomeTabelas;
import spassocasaerp.controllers.ClienteJpaController;
import spassocasaerp.entities.Fornecedor;
import spassocasaerp.entities.Categoriaproduto;
import spassocasaerp.entities.Produto;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import spassocasaerp.Classes.ClassesAnemicas.BotoesEscolha;
import spassocasaerp.Classes.ClassesAnemicas.MudarNomeComponentes;
import spassocasaerp.controllers.CategoriaprodutoJpaController;
import spassocasaerp.controllers.FornecedorJpaController;
import spassocasaerp.controllers.ProdutoJpaController;
import spassocasaerp.controllers.exceptions.NonexistentEntityException;
import spassocasaerp.entities.Categoriaproduto;
/**
 *
 * @author tioza
 */



public class JFrameMain extends javax.swing.JFrame {

    /**
     * Creates new form JFrameMain
     */
    
   
   
    EntityManagerFactory conn;
    public static BotoesEscolha pegarBotoesEscolha; 
    public static MudarNomeComponentes mudarNomes;
    
    public JFrameMain() {
        initComponents();
        pegarBotoesEscolha = new BotoesEscolha(btnInserir,btnEditar,btnDeletar,btnLimpar);
        mudarNomes = new MudarNomeComponentes(btnInserir, txtTabela, btnEditar, btnDeletar);
        conn = Persistence.createEntityManagerFactory("SpassoCasaERPPU");
        this.setLocationRelativeTo(null);
        MetodosGenericos.enableBtnsIniciais(false,pegarBotoesEscolha);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnInserir = new javax.swing.JButton();
        txtTabela = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Fornecedor");
        jButton1.setActionCommand("Mostar Cliente");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Categoria Produto");
        jButton2.setToolTipText("");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Produto");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Clique nos botões para listar as seguintes tabelas:");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(40);
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tableFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tableFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btnInserir.setText("Inserir Entidade");
        btnInserir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInserirMouseClicked(evt);
            }
        });
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        txtTabela.setText("A tabela Entidade esta sendo listada:");

        btnEditar.setText("Editar Entidade");
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar Entidade");
        btnDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeletarMouseClicked(evt);
            }
        });

        btnLimpar.setText("Limpar seleção");
        btnLimpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimparMouseClicked(evt);
            }
        });
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(35, 35, 35)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTabela)
                                .addGap(197, 197, 197)
                                .addComponent(btnLimpar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInserir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeletar)))
                        .addGap(131, 516, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton2))
                        .addGap(84, 84, 84))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInserir)
                        .addComponent(btnEditar)
                        .addComponent(btnDeletar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTabela)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        
    }//GEN-LAST:event_btnInserirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       
        MetodosGenericos.enableBtnsIniciais(true, pegarBotoesEscolha);
        MetodosGenericos.mudarTextosInicias(NomeTabelas.Fornecedor.toString(),mudarNomes);
        FornecedorJpaController fornecedorC = new FornecedorJpaController(conn);
        ((DefaultTableModel)table.getModel()).setRowCount(0);
        
        
            DefaultTableModel model = new DefaultTableModel(
                new Object[][] {},
                new Object[] {"Id", "Nome", "Email","Telefone"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                
                return false;
            }
        };
         table.setModel(model);
         
         
         
        List<Fornecedor> fornecedores = fornecedorC.findFornecedorEntities();
        for (Fornecedor fornecedor : fornecedores) {
            String linha[] = {
                fornecedor.getId().toString(),
                fornecedor.getNome(),
                fornecedor.getEmail(),
                fornecedor.getTelefone()
                
            };
           
            ((DefaultTableModel)table.getModel()).addRow(linha);
        }
    }//GEN-LAST:event_jButton1MouseClicked

   
    
    private void btnInserirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseClicked
        
        
        if(btnInserir.getText().equals("Inserir Fornecedor")){
         MetodosGenericos.abrirForm(FornecedorInserirForm.class,380,350);
         MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
        }
        
        if(btnInserir.getText().equals("Inserir Categoria Produto")){
         MetodosGenericos.abrirForm(CategoriaProdutoInserirForm.class,380,350);
         MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
        }
        
         if(btnInserir.getText().equals("Inserir Produto")){
         MetodosGenericos.abrirForm(ProdutoInserirForm.class,380,450);
         MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
        }
        
        
        
    }//GEN-LAST:event_btnInserirMouseClicked

    private void btnDeletarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarMouseClicked
            
         if(table.getSelectedRow() == -1){
                
                  JOptionPane.showMessageDialog(this, 
                                      "Selecione uma linha para deletar!!!",
                                      "Aviso",
                                      JOptionPane.WARNING_MESSAGE);
            }
        if(btnInserir.getText().equals("Inserir Fornecedor" ) && 
                    table.getSelectedRow() != -1){
                try{
                Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
                    if(JOptionPane.showConfirmDialog(this, 
                                             "Tem certeza que deseja deletar o fornecedor com o id:" + id + "?\nSe voce deletar esse fornecedor, todos os produtos relacionados vão ser deletados tambem",
                                             "Tem certeza?",
                                             JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        
                                              FornecedorJpaController fornecedorC = new FornecedorJpaController(conn);
                
                
                
                table.clearSelection();
                fornecedorC.destroy(id);   
                 JOptionPane.showMessageDialog(this, 
                                      "Fornecedor com id:"+id+" deletado com sucesso!",
                                      "Sucesso",
                                      JOptionPane.INFORMATION_MESSAGE);
                jButton1MouseClicked(evt);
                    }
                    else{
                        table.clearSelection();
                    }
               
                
                }catch(NonexistentEntityException e){
                    e.printStackTrace();
                }
                
                
                
            }
            
            
            if(btnInserir.getText().equals("Inserir Categoria Produto" ) && 
                    table.getSelectedRow() != -1){
                try{
                Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
                    if(JOptionPane.showConfirmDialog(this, 
                                             "Tem certeza que deseja deletar a Categoria do produto com o id:" + id + "?Se voce deletar essa categoria de produto, todos os produtos relacionados vão ser deletados tambem",
                                             "Tem certeza?",
                                             JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        
                                     CategoriaprodutoJpaController  catProdutoC = new CategoriaprodutoJpaController(conn);
                
                
                
                table.clearSelection();
                catProdutoC.destroy(id);   
                 JOptionPane.showMessageDialog(this, 
                                      "Categoria do produto com id:"+id+" deletado com sucesso!",
                                      "Sucesso",
                                      JOptionPane.INFORMATION_MESSAGE);
                jButton2MouseClicked(evt);
                    }
                    else{
                        table.clearSelection();
                    }
               
                
                }catch(NonexistentEntityException e){
                    e.printStackTrace();
                }
                
                
                
            }
            
            
            
            if(btnInserir.getText().equals("Inserir Produto" ) && 
                    table.getSelectedRow() != -1){
                try{
                Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
                    if(JOptionPane.showConfirmDialog(this, 
                                             "Tem certeza que deseja deletar o produto com o id:" + id + "?",
                                             "Tem certeza?",
                                             JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        
                                     ProdutoJpaController  produtoC = new ProdutoJpaController(conn);
                
                
                
                table.clearSelection();
                produtoC.destroy(id);   
                 JOptionPane.showMessageDialog(this, 
                                      "Produto com id:"+id+" deletado com sucesso!",
                                      "Sucesso",
                                      JOptionPane.INFORMATION_MESSAGE);
                jButton3MouseClicked(evt);
                    }
                    else{
                        table.clearSelection();
                    }
               
                
                }catch(NonexistentEntityException e){
                    e.printStackTrace();
                }
                
                
                
            }
            
            
            
           
    }//GEN-LAST:event_btnDeletarMouseClicked

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
            
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnLimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparMouseClicked
            table.clearSelection();
    }//GEN-LAST:event_btnLimparMouseClicked

    private void tableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableFocusGained
        
    }//GEN-LAST:event_tableFocusGained

    private void tableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableFocusLost
        
    }//GEN-LAST:event_tableFocusLost

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        
        if(table.getSelectedRow() !=-1){
            if(btnInserir.getText().equals("Inserir Fornecedor" )){
                
                 MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
            FornecedorJpaController fornecedorC = new FornecedorJpaController(conn);
         Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
        Fornecedor receber = fornecedorC.findFornecedor(id);
        FornecedorEditarForm.pegarFornecedorEditar = receber;
        FornecedorEditarForm.pegarFornecedorID = id.toString();
            MetodosGenericos.abrirForm(FornecedorEditarForm.class, 380,350);    
            }
            
            if(btnInserir.getText().equals("Inserir Categoria Produto" )){
            MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
            
            
            CategoriaprodutoJpaController categoriaProdutoC = new CategoriaprodutoJpaController(conn);
         Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
        Categoriaproduto receber = categoriaProdutoC.findCategoriaproduto(id);
        CategoriaProdutoEditarForm.pegarCategoriaProdutoEditar = receber;
        CategoriaProdutoEditarForm.pegarCategoriaProdutoID = id.toString();
            MetodosGenericos.abrirForm(CategoriaProdutoEditarForm.class, 380,350);    
            
           
            
            
        }
            
             if(btnInserir.getText().equals("Inserir Produto" )){
            MetodosGenericos.enableBtnsIniciais(false, pegarBotoesEscolha);
            
            
            ProdutoJpaController produtoC = new ProdutoJpaController(conn);
         Integer id = Integer.parseInt( table.getValueAt(table.getSelectedRow(), 0).toString()); 
        Produto receber = produtoC.findProduto(id);
        ProdutoEditarForm.pegarProdutoEditar = receber;
        ProdutoEditarForm.pegarProdutoID = id.toString();
            MetodosGenericos.abrirForm(ProdutoEditarForm.class, 380,500);    
            
           
            
            
        }
            
            
            
        }
        else{
             JOptionPane.showMessageDialog(this, 
                                      "Selecione uma linha para Editar!!!",
                                      "Aviso",
                                      JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
         MetodosGenericos.enableBtnsIniciais(true, pegarBotoesEscolha);
        MetodosGenericos.mudarTextosInicias(NomeTabelas.CategoriaProduto.toString(),mudarNomes);
        CategoriaprodutoJpaController catProdutoC = new CategoriaprodutoJpaController(conn);
        ((DefaultTableModel)table.getModel()).setRowCount(0);
        
        
            DefaultTableModel model = new DefaultTableModel(
                new Object[][] {},
                new Object[] {"Id", "Nome"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                
                return false;
            }
        };
         table.setModel(model);
         
         
         
        List<Categoriaproduto> catProdutos = catProdutoC.findCategoriaprodutoEntities();
        for (Categoriaproduto catProduto : catProdutos) {
            String linha[] = {
                catProduto.getId().toString(),
                catProduto.getNome(),
                
            };
           
            ((DefaultTableModel)table.getModel()).addRow(linha);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
          MetodosGenericos.enableBtnsIniciais(true, pegarBotoesEscolha);
        MetodosGenericos.mudarTextosInicias(NomeTabelas.Produto.toString(),mudarNomes);
        ProdutoJpaController produtoC = new ProdutoJpaController(conn);
        ((DefaultTableModel)table.getModel()).setRowCount(0);
        
        
            DefaultTableModel model = new DefaultTableModel(
                new Object[][] {},
                new Object[] {"Id", "Nome", "Preço","Descrição","Estoque","Categoria do Produto", "Fornecedor"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                
                return false;
            }
        };
         table.setModel(model);
         
         
         
        List<Produto> produtos = produtoC.findProdutoEntities();
        for (Produto produto : produtos) {
            String linha[] = {
                produto.getId().toString(),
                produto.getNome(),
                produto.getPreco().toString(),
                produto.getDescricao(),
                String.valueOf(produto.getEstoque()),
                String.valueOf(produto.getIdCategoriaProduto().getId()),
                String.valueOf(produto.getIdFornecedor().getId()),
                
            };
           
            ((DefaultTableModel)table.getModel()).addRow(linha);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JLabel txtTabela;
    // End of variables declaration//GEN-END:variables
}
